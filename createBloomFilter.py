# !/usr/bin/python3
# encoding=utf8
# -*- coding: utf-8 -*-
"""
@author: Noname400
"""
version = '2.5'

from sys import argv
from os import system, name
from time import time
from datetime import datetime
from libraries.filter import BloomFilter

def cls():
    system('cls' if name=='nt' else 'clear')

def count_lines(file):
    return sum(1 for line in open(file, 'r'))

def date_str():
    now = datetime.now()
    return now.strftime("%m/%d/%Y, %H:%M:%S")

def convert(line_count,file_in,file_out):
    eth_0x = 0
    line_10 = 100000
    count = 0
    err= 0
    bloom_filter = BloomFilter(size=line_count, fp_probability=1e-12)
    print(f"[I] Start create list ...")
    st = time()
    with open(file_in, "r") as f:
        for line in f:
            res = line.strip()
            if res[:2] == '0x':
                bloom_filter.add(res[2:])
                eth_0x += 1
            else:
                err += 1

            count += 1
            if count == line_10:
                print(f"> error: {err} | ETH 0x: {eth_0x}| total: {count}",end='\r')
                line_10 +=100000
    print('\n')
    print(f"[I] Finish create list ... ({time()-st:.2f} sec) | Total line: {count}")
    st = time()
    with open(file_out, "wb") as fp:
        bloom_filter.save(fp)
    print(f"[I] Bloom filter saved. ({time()-st:.2f}) sec)")
    print(f"[END] error: {err} | ETH 0x: {eth_0x}| total: {count}",end='\r')
    print('\n')

if __name__ == "__main__":
    cls()
    file_in = argv[1]
    file_out = argv[2]
    if len (argv) < 3:
        print ("[E] Error. Too few options.")
        exit(1)

    if len (argv) > 3:
        print ("[E] Error. Too many parameters.")
        exit(1)
    print(f"[I] Start line count ...")
    line_count = count_lines(file_in)
    print(f"[I] Finish line count ...")
    print('-'*70,end='\n')
    print(f'[I] Version: {version}')
    print(f'[I] File address : {file_in}')
    print(f'[I] Bloom Filter : {file_out}')
    print(f'[I] Total lines : {line_count}')
    print(f'[I] START: {date_str()}')
    print('-'*70,end='\n')
    convert(line_count,file_in,file_out)
    
